<?php

define('PROJECT_DEMO_CONTENT_DIR', 'profiles/project/demo_content/');

/**
 * @file
 * Install, update and uninstall functions for the installation profile.
 */

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function project_install() {
  // Add text formats.
  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => -10,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);

  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => -9,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  // Enable the default theme.
  $default_theme = 'bartik';
  variable_set('theme_default', $default_theme);

  // Enable some standard blocks.
  $admin_theme = 'seven';

  // Set blocks
  $website_dev_delta = db_insert('block_custom')
      ->fields(array(
        'body' => '<p>Website by Bakalyar</p>',
        'info' => t('Website Developer'),
        'format' => 'full_html',
      ))
      ->execute();

  $blocks = array(
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'title' => '',
      'cache' => DRUPAL_NO_CACHE,
    ),
    array(
      'module' => 'system',
      'delta' => 'main-menu',
      'theme' => $default_theme,
      'pages' => '',
      'title' => '<none>',
      'cache' => DRUPAL_NO_CACHE,
    ),
    array(
      'module' => 'menu',
      'delta' => 'secondary-menu',
      'theme' => $default_theme,
      'pages' => '',
      'title' => '<none>',
      'cache' => DRUPAL_NO_CACHE,
    ),
    array(
      'module' => 'block',
      'delta' => $website_dev_delta,
      'theme' => $default_theme,
      'pages' => '',
      'title' => '<none>',
      'cache' => DRUPAL_NO_CACHE,
    ),
  );
  $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'pages', 'title', 'cache'));
  foreach ($blocks as $block) {
    $query->values($block);
  }
  $query->execute();

  // Enable default permissions for system roles.
  $filtered_html_permission = filter_permission_name($filtered_html_format);
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content', $filtered_html_permission));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content', $filtered_html_permission));

  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
      ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
      ->execute();

  // Enable the admin theme.
  db_update('system')
      ->fields(array('status' => 1))
      ->condition('type', 'theme')
      ->condition('name', 'seven')
      ->execute();
  // Disable bartik theme.
//  db_update('system')
//      ->fields(array('status' => 0))
//      ->condition('type', 'theme')
//      ->condition('name', 'bartik')
//      ->execute();
//  variable_set('admin_theme', 'seven');
//  variable_set('node_admin_theme', '1');

  // Variables
  // Set path for private files
  variable_set('file_private_path', 'sites/default/files/private');

  // Import content
  project_demo_content();
}

/**
 * Imports demo content
 */
function project_demo_content() {
  // Import content
  $content_file = PROJECT_DEMO_CONTENT_DIR . 'nodes.txt';
  $node_code = file_get_contents($content_file, "r");

  if (!empty($node_code) && module_exists('node_export')) {
    node_export_import($node_code);
  }

  // Prepare options to import menu.
  $options = array(
    'create_content' => FALSE,
    'link_to_content' => TRUE,
    'remove_menu_items' => FALSE
  );
  // Import main menu
  $main_menu_file = PROJECT_DEMO_CONTENT_DIR . 'main_menu.txt';
  $main_menu_name = 'main-menu';

  module_load_include('inc', 'menu_import', 'includes/import');
  menu_import_file($main_menu_file, $main_menu_name, $options);
}

/**
 * Creates demo terms for some vocabulary
 */
//function project_demo_terms() {
//  $vocab = taxonomy_vocabulary_machine_name_load('vocabulary');
//
//  $terms = array('Category 1', 'Category 2', 'Category 3', 'Category 4');
//
//  foreach ($terms as $term) {
//    $category = (object) array(
//          'name' => $term,
//          'description' => '',
//          'vid' => $vocab->vid,
//    );
//
//    taxonomy_term_save($category);
//  }
//}
